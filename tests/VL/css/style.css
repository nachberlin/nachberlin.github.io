/* ==========================================================================
   Normalize.scss settings
   ========================================================================== */
/**
 * Includes legacy browser support IE6/7
 *
 * Set to false if you want to drop support for IE6 and IE7
 */
/* Base
   ========================================================================== */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 * 3. Corrects text resizing oddly in IE 6/7 when body `font-size` is set using
 *  `em` units.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevents modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active, a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Addresses styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * 1. Remove border when inside `a` element in IE 8/9/10.
 * 2. Improves image quality when scaled in IE 7.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 * Correct font family set oddly in IE 6, Safari 4/5, and Chrome.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *  Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 * 4. Improves appearance and consistency in all browsers.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *  and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *  `input` and others.
 * 4. Removes inner spacing in IE 7 without affecting normal text inputs.
 *  Known issue: inner spacing remains in IE 6.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 *  Known issue: excess padding remains in IE 6.
 */
input[type="checkbox"],
input[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 * 3. Corrects text not wrapping in Firefox 3.
 * 4. Corrects alignment displayed oddly in IE 6/7.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/**local css var for media queryes**/
:root {
  --gutter: 20px; }

/*grids*/
body {
  background-color: #fff;
  height: 100vh;
  min-width: 320px;
  width: 100%;
  margin: 0;
  padding: 0;
  font-family: Arial, sans-serif;
  font-size: 16px; }

.page-header {
  min-height: 80px;
  height: 15%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center; }
  .page-header::after {
    content: "";
    display: table;
    clear: both; }

.page-title {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  width: 33%;
  padding: 10px 42px;
  font-size: 2em;
  line-height: 1.2em; }

.search {
  position: relative;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  width: 33%;
  height: auto;
  -ms-flex-item-align: stretch;
      align-self: stretch;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  padding: 20px; }
  .search::after {
    content: '';
    position: absolute;
    right: 25px;
    top: 50%;
    width: 25px;
    height: 25px;
    z-index: 1;
    -webkit-transform: translateY(-50%);
            transform: translateY(-50%);
    background: url("../img/search.png") no-repeat;
    background-size: cover; }

.search-input {
  width: 100%;
  min-height: 30%;
  border: 1px solid black;
  padding: 5px;
  -ms-flex-item-align: center;
      align-self: center;
  outline: none;
  background-color: #cacaca; }

.search__tips {
  position: absolute;
  width: calc(100% - 40px);
  margin-left: 20px;
  margin-right: 20px;
  left: 0;
  top: 70%;
  background-color: #fff;
  z-index: 1; }

.search__tips ul {
  margin: 0;
  padding: 10px; }

.search__tips li {
  list-style-type: none;
  display: inline-block;
  padding: 2px 5px;
  margin: 5px;
  line-height: 1.5em;
  background-color: #e4e4e4;
  border-radius: 2px;
  cursor: pointer; }

/*img as img src*/
img {
  max-width: 100%;
  height: auto; }

.page-content {
  width: 100%;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  margin: 0;
  padding: 20px 20px 0;
  padding: var(--gutter) var(--gutter) 0;
  display: grid;
  grid-gap: 20px;
  grid-gap: var(--gutter);
  grid-template-columns: repeat(4, 1fr);
  background-color: #cacaca; }

.page-content__item {
  background-size: cover;
  background-repeat: no-repeat;
  background-position: 50% 50%;
  overflow: hidden;
  grid-column: initial;
  grid-row: initial;
  font-size: 0; }
  .page-content__item--hor {
    grid-column: span 2;
    background-color: blue; }
  .page-content__item--vert {
    grid-column: 4 / 5;
    grid-row: span 2;
    background-color: blue; }

.page-content__item img {
  -webkit-transition: -webkit-transform .5s;
  transition: -webkit-transform .5s;
  transition: transform .5s;
  transition: transform .5s, -webkit-transform .5s; }
  .page-content__item img:hover {
    -webkit-transform: scale(1.25);
            transform: scale(1.25); }
  @media (max-width: 1200px) {
    :root {
      --gutter: 20px; }
    .page-title {
      width: 40%; } }
  @media (max-width: 900px) {
    :root {
      --gutter: 20px; }
    .page-header {
      height: 15%; }
    .page-title {
      width: 50%;
      padding: 10px 30px;
      font-size: 1.7em;
      line-height: 1.2em; }
    .search {
      width: 40%; }
    .page-content {
      height: auto;
      grid-template-columns: repeat(3, 1fr);
      grid-template-rows: repeat(2, auto) minmax(180px, auto); }
      .page-content__item--hor {
        grid-row: 3;
        width: 100%;
        padding-top: 50%;
        font-size: 10px;
        /*Firefox needs anything here or it will not show this block at all*/
        -ms-flex-item-align: stretch;
            align-self: stretch; }
      .page-content__item--vert {
        grid-column: 3;
        grid-row: 1 /span 2; } }
  @media (max-width: 600px) {
    :root {
      --gutter: 15px; }
    .page-title {
      width: 50%; }
    .search {
      width: 50%;
      padding-right: 20px;
      padding-right: var(--gutter); }
    .page-content {
      -ms-grid-columns: 1fr 1fr;
      grid-template-columns: repeat(2, 1fr);
      grid-template-rows: repeat(3, auto) minmax(120px, auto); }
      .page-content__item--hor {
        grid-row: 4; }
      .page-content__item--vert {
        grid-column: 2;
        grid-row: 1 /span 2; } }
  @media (max-width: 450px) {
    .page-header {
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
      height: auto; }
    .page-title {
      width: 100%;
      margin-bottom: 0;
      text-align: center; }
    .search {
      width: 100%; }
    .page-content {
      grid-template-columns: 1fr;
      grid-template-rows: repeat(6, 1fr) auto; }
      .page-content__item--hor {
        grid-column: span 1;
        grid-row: initial;
        min-height: 100px; }
      .page-content__item--vert {
        grid-column: initial;
        grid-row: span 2; } }
  @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
  .page-content {
    display: -ms-grid;
    -ms-grid-auto-flow: column;
    -ms-grid-columns: 1fr 20px 1fr 20px 1fr 20px 1fr;
    -ms-grid-template-rows: auto auto;
    -ms-grid-rows: auto 20px auto; }
  .page-content__item:nth-child(1) {
    -ms-grid-row: 1;
    -ms-grid-column: 1;
    -ms-grid-column-span: 1; }
  .page-content__item:nth-child(2) {
    -ms-grid-row: 1;
    -ms-grid-column: 3;
    -ms-grid-column-span: 1; }
  .page-content__item:nth-child(3) {
    -ms-grid-row: 1;
    -ms-grid-column: 5;
    -ms-grid-column-span: 1; }
  .page-content__item:nth-child(4) {
    -ms-grid-row: 1;
    -ms-grid-column: 7;
    -ms-grid-column-span: 1;
    -ms-grid-row-span: 3;
    background: blue; }
  .page-content__item:nth-child(5) {
    -ms-grid-row: 3;
    -ms-grid-column: 1;
    -ms-grid-column-span: 1; }
  .page-content__item:nth-child(6) {
    -ms-grid-row: 3;
    -ms-grid-column: 3;
    -ms-grid-column-span: 3;
    background: black; } }
  @media screen and (-ms-high-contrast: active) and (max-width: 900px), (-ms-high-contrast: none) and (max-width: 900px) {
    .page-content {
      -ms-grid-columns: 1fr 20px 1fr 20px 1fr;
      -ms-grid-rows: auto 20px auto 20px 250px; }
    .page-content__item:nth-child(3) {
      -ms-grid-row: 3;
      -ms-grid-column: 1; }
    .page-content__item:nth-child(4) {
      -ms-grid-row: 1;
      -ms-grid-column: 5; }
    .page-content__item:nth-child(5) {
      -ms-grid-row: 3;
      -ms-grid-column: 3; }
    .page-content__item:nth-child(6) {
      -ms-grid-row: 5;
      -ms-grid-column: 1; } }
  @media screen and (-ms-high-contrast: active) and (max-width: 600px), (-ms-high-contrast: none) and (max-width: 600px) {
    .page-content {
      -ms-grid-columns: 1fr 20px 1fr;
      -ms-grid-rows: auto 20px auto 20px auto 20px 200px; }
    .page-content__item:nth-child(2) {
      -ms-grid-row: 3;
      -ms-grid-column: 1; }
    .page-content__item:nth-child(3) {
      -ms-grid-row: 5;
      -ms-grid-column: 1; }
    .page-content__item:nth-child(4) {
      -ms-grid-row: 1;
      -ms-grid-column: 3; }
    .page-content__item:nth-child(5) {
      -ms-grid-row: 5;
      -ms-grid-column: 3; }
    .page-content__item:nth-child(6) {
      -ms-grid-row: 7;
      -ms-grid-column: 1; } }
  @media screen and (-ms-high-contrast: active) and (max-width: 450px), (-ms-high-contrast: none) and (max-width: 450px) {
    .page-content {
      display: block; }
    .page-content__item:nth-child(4) {
      width: 100%;
      padding-top: 200%; }
    .page-content__item:nth-child(6) {
      width: 100%;
      padding-top: 50%; }
  .page-content__item {
    margin-bottom: 15px; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
